# Docker image
# Build a Docker image to deploy, run, or push to a container registry.
# Add steps that use Docker Compose, tag images, push to a registry, run an image, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  - master

pool:
  vmImage: "Ubuntu-16.04"

variables:
  imageName: "$(dockerId)/districtr-api:$(build.buildId)"

steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: "3.6"
      architecture: "x64"

  - script: |
      pip install pipenv
      pipenv install --dev --pre
    displayName: "Install dependencies from Pipfile"

  - script: |
      pipenv run flake8 api --max-line-length 88
    displayName: "Run lint tests"

  - script: |
      pipenv run pytest tests --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
    displayName: "Test with pytest"

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: "**/test-*.xml"
      testRunTitle: "Publish test results"

  - script: docker build -f Dockerfile -t $(imageName) .
    displayName: "Build Docker image"

  - script: |
      echo $(dockerPassword) | docker login -u $(dockerId) --password-stdin
      docker push $(imageName)
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    displayName: "Push Docker image"

  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: 'Source'
      targetPath: '.'